# Generated by Django 4.2.7 on 2025-08-09 15:37

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Genre',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tmdb_id', models.IntegerField(help_text='TMDb genre ID', unique=True)),
                ('name', models.CharField(help_text='Genre name', max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name_plural': 'Genres',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Movie',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tmdb_id', models.IntegerField(help_text='TMDb movie ID', unique=True)),
                ('title', models.CharField(help_text='Movie title', max_length=200)),
                ('overview', models.TextField(blank=True, help_text='Movie plot summary')),
                ('release_date', models.DateField(blank=True, help_text='Release date', null=True)),
                ('vote_average', models.FloatField(default=0.0, help_text='Average rating (0-10)', validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(10.0)])),
                ('popularity', models.FloatField(default=0.0, help_text='TMDb popularity score')),
                ('poster_path', models.CharField(blank=True, help_text='Poster image path', max_length=200)),
                ('backdrop_path', models.CharField(blank=True, help_text='Backdrop image path', max_length=200)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['-popularity', '-vote_average'],
            },
        ),
        migrations.CreateModel(
            name='MovieGenre',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('genre', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='movies.genre')),
                ('movie', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='movies.movie')),
            ],
            options={
                'verbose_name_plural': 'Movie Genres',
                'unique_together': {('movie', 'genre')},
            },
        ),
        migrations.AddField(
            model_name='movie',
            name='genres',
            field=models.ManyToManyField(blank=True, through='movies.MovieGenre', to='movies.genre'),
        ),
        migrations.CreateModel(
            name='UserFavorite',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('movie', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='favorited_by', to='movies.movie')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='favorites', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'User Favorites',
                'ordering': ['-created_at'],
                'unique_together': {('user', 'movie')},
            },
        ),
        migrations.AddIndex(
            model_name='movie',
            index=models.Index(fields=['tmdb_id'], name='movies_movi_tmdb_id_0e4cad_idx'),
        ),
        migrations.AddIndex(
            model_name='movie',
            index=models.Index(fields=['-popularity'], name='movies_movi_popular_3c541f_idx'),
        ),
        migrations.AddIndex(
            model_name='movie',
            index=models.Index(fields=['-vote_average'], name='movies_movi_vote_av_12ed28_idx'),
        ),
        migrations.AddIndex(
            model_name='movie',
            index=models.Index(fields=['release_date'], name='movies_movi_release_b7ac7d_idx'),
        ),
    ]
